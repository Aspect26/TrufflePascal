package cz.cuni.mff.d3s.trupple.language.nodes.builtin.tp;

import com.oracle.truffle.api.dsl.NodeChild;
import com.oracle.truffle.api.dsl.Specialization;
import com.oracle.truffle.api.nodes.NodeInfo;

import cz.cuni.mff.d3s.trupple.language.PascalLanguage;
import cz.cuni.mff.d3s.trupple.language.nodes.ExpressionNode;
import cz.cuni.mff.d3s.trupple.parser.identifierstable.types.TypeDescriptor;
import cz.cuni.mff.d3s.trupple.parser.identifierstable.types.primitive.IntDescriptor;

/**
 * Node representing Turbo Pascal's random function. It returns a random value using specified upper bound.
 *
 * This node uses specializations which means that it is not used directly but completed node is generated by Truffle.
 * {@link RandomBuiltinNodeGen}
 */
@NodeInfo(shortName = "random")
@NodeChild(value = "argument", type = ExpressionNode.class)
public abstract class RandomBuiltinNode extends ExpressionNode {

    @Specialization
	int getRandom(int upperBound) {
		return PascalLanguage.INSTANCE.getRandom(upperBound);
	}

    @Override
    public TypeDescriptor getType() {
        return IntDescriptor.getInstance();
    }

}
