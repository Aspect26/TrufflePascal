package cz.cuni.mff.d3s.trupple.language.nodes.literals;

import com.oracle.truffle.api.dsl.Specialization;

import cz.cuni.mff.d3s.trupple.language.nodes.ExpressionNode;
import cz.cuni.mff.d3s.trupple.parser.identifierstable.types.TypeDescriptor;
import cz.cuni.mff.d3s.trupple.parser.identifierstable.types.primitive.IntDescriptor;

/**
 * Node representing integer literal.
 *
 * This node uses specializations which means that it is not used directly but completed node is generated by Truffle.
 * {@link IntLiteralNodeGen}
 */
public abstract class IntLiteralNode extends ExpressionNode {

	private final int value;

	IntLiteralNode(int value) {
		this.value = value;
	}

	@Specialization
	public int execute() {
		return value;
	}

    @Override
    public TypeDescriptor getType() {
        return IntDescriptor.getInstance();
    }

}
